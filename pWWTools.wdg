#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : pWWTools
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1152f6150929d3c2
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  internal_properties : CAAAAAgAAACAzy3E4eS8fnPeSxDth3hnFX7pG9B6Kpt6vkLlYtmEvaugDLCfgXaobD4np/T5fbaHPZCLzI318Ntbm2fvlFoL1zAm324xzwgjBSDWZ9pWH+h8MjYkt32g2bCzTeSyu/mR44DLdYR15DDZcQ==
  type_code : 31
  p_codes :
   -
     code : |1-
      
     type : 720896
  procedures :
   -
     name : GetTermList
     procedure_id : 1248330616943596482
     type_code : 15
     code : |1-
      //
      // Summary: Divides a list of terms and separates them by CR characters
      // Syntax:
      //[<Result> = ] GetTermList (<sTermList> is string)//
      // Parameters:
      //	sTermList (string): rough list of terms
      // Return value:
      // 	string: // 	Returns the list of terms separated by CR characters
      //
      // Example:
      // Indicate an example.
      //
      Procedure PUBLIC  GetTermList(sTermList is string)
      
      // Variable
      sTempTerm            is string
      sFinalList          is string
      bWordEnded           is boolean
      bTermCombine         is boolean
      bCurrentTermCombine  is boolean
      
      // Initialization
      bTermCombine = False
      bCurrentTermCombine = False
      
      //  Formatting the list of terms
      FOR nSubscript=1 _TO_ Length(sTermList)
      	// Character to take?
      	IF (sTermList[[nSubscript]] <> " ") THEN
      		// End of combined term?
      		IF sTermList[[nSubscript]] = """" AND bCurrentTermCombine = True THEN
      			bCurrentTermCombine = False
      			// Beginning of combined term?
      		ELSE IF sTermList[[nSubscript]] = """" AND bTermCombine = False THEN
      			bTermCombine = True	
      			bCurrentTermCombine = True
      		ELSE		
      			// Retrieve the term
      			sTempTerm += sTermList[[nSubscript]]
      			bWordEnded = False
      		END
      		// If it's the end of a term or word, concatenation to the list 
      	ELSE IF bWordEnded = False AND bCurrentTermCombine = False
      		// Concatenation of the term
      		sFinalList += sTempTerm + CR
      		
      		// Reset the variables
      		bTermCombine = False
      		sTempTerm = ""
      		bWordEnded = True
      	ELSE
      		// Case of a space in a combined term: take it
      		sTempTerm += sTermList[[nSubscript]]
      	END
      END
      
      // Add the last term
      IF sTempTerm <> "" THEN
      	sFinalList += sTempTerm + CR
      END
      
      RESULT sFinalList
     type : 458752
   -
     name : CheckEmail
     procedure_id : 1248330616943662018
     type_code : 15
     code : |1+
      // Summary: Checks whether a valid email format was entered by the user
      // Syntax:
      //[ <Result> = ] VerifEmail (<sEmail>)
      //
      // Parameters:
      //	sEmail: email address entered by the user
      // Return value:
      // 	Boolean: True if the address is valid
      //
      
      Procedure CheckEmail(sEmail)
      
      // checks whether a valid email format was entered by the user
      // returns 1 if the format is correct, 0 otherwise 
      
      nLongAro		is int       // position of @
      nLongLastPoint 	is int 		// position of the last dot
      sUser  	is string    	// what is found before @
      sServer	 	is string    	// what is found before @ and the last dot
      sCountry         	is string    	// what is found after the last dot
      
      // position of @ 
      nLongAro = Position(sEmail,"@")
      // no @
      IF NOT nLongAro THEN RESULT False
      // several @
      IF Position(sEmail[[nLongAro+1 TO Length(sEmail)]], "@")<>0 THEN RESULT 0
      
      // calculate the position of the last dot
      i is int =1
      // search for the last dot in the string found after @
      WHILE ExtractString(sEmail[[nLongAro+1 TO Length(sEmail)]], i, ".") <> EOT
      	sCountry=ExtractString(sEmail[[nLongAro+1 TO Length(sEmail)]], i, ".")
      	i++
      END
      // no.
      IF i=1 THEN RESULT False
      // position of the last dot
      nLongLastPoint=Length(sEmail)-Length(sCountry)
      
      // extract the user part  
      sUser = sEmail[[1 TO nLongAro -1]]
      // extract the server part
      sServer	= sEmail[[nLongAro+1 TO nLongLastPoint-1]]
      
      IF (Length(sUser) = 0 OR Length(sServer) = 0) THEN 
      	RESULT False
      END
      
      IF (Length(sCountry) <2 OR Length(sCountry) >3) THEN
      	RESULT False
      END
      
      RESULT True
      
      
     type : 458752
   -
     name : fDirAvatars
     procedure_id : 1248330616943727554
     type_code : 15
     code : |1-
      // Summary: Returns the directory where the avatars are stored
      // Syntax:
      //[ <Result> = ] fDirAvatars ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	string: Directory where the avatars are stored
      //
      // Example:
      // Indicate an example.
      //
      Procedure fDirAvatars()
      
      RESULT fWebDir() + ["/"] + "../images/avatar"
     type : 458752
   -
     name : fDirTempAvatars
     procedure_id : 1248330616943793090
     type_code : 15
     code : |1-
      // Summary: Returns the directory where the temporary avatars are stored
      // Syntax:
      //[ <Result> = ] fDirTempAvatars ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	string: Directory where the temporary avatars are stored
      //
      // Example:
      // Indicate an example.
      //
      Procedure fDirTempAvatars()
      
      RESULT fWebDir() + ["/"] + "../avatar"
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : COL_Collection1
resources :
 string_res :
  identifier : 0x191b120e005ba86a
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
